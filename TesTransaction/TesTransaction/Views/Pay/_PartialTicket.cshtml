@model TesTransaction.Models.Transactions.TrTicketViewModel

@{

    Layout = null;

}

<!--  -->
<!-- Logo Magasin -->
<div style="text-align: center;">
    <img src="~/Content/image/logo_magasin.png" alt="logo du magasin">
</div>

<div class="container">
    <!-- Date et heure-->
    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(m => m.DateTicket)
        </div>
        <div class="col-md-2 offset-md-2">
            @Html.DisplayFor(m => m.DateTicket)
            @Html.ValidationMessageFor(m => m.DateTicket, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- N° Transac -->
    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(m => m.Transaction)
        </div>
        <div class="col-md-2 offset-md-2">
            @Html.DisplayFor(m => m.Transaction)
            @Html.ValidationMessageFor(m => m.Transaction, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<!-- coordonnées magasin -->
<div style="text-align: center;">
    <p>Nom du magasin</p>
    <p>rue du magasin</p>
    <p>ville</p>
    <p>Tel</p>
    <p>email</p>
    <p>heures d'ouverture</p>
</div>

<!-- liste des articles -->
<div>
    <table class="table table-condensed" id="tableDetail">
        <tr>
            <th>Produit</th>
            <th>Prix</th>
            <th>Quantité</th>
            <th>Total</th>
        </tr>
        @{
            if (Model.DetailsListWithTot == null || Model.DetailsListWithTot.Count == 0)
            {
                <tr>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            }
            else
            {
                foreach (var item in Model.DetailsListWithTot)
                {
                    <tr>
                        <td id="nameItem">@item.ProductName</td>
                        <td id="price">@item.Price</td>
                        <td id="quantity">@item.Quantity</td>
                        <td id="itemSubTot">@item.TotalItem</td>
                    </tr>
                }
            }
        }
    </table>
</div>

<div class="container">
    <!-- remise -->
    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(m => m.DiscountG)
        </div>
        <div class="col-md-2 offset-md-2">
            @Html.DisplayFor(m => m.DiscountG)
            @Html.ValidationMessageFor(m => m.DiscountG, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- TVA -->
    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(m => m.VatG)
        </div>
        <div class="col-md-2 offset-md-2">
            @Html.DisplayFor(m => m.VatG)
            @Html.ValidationMessageFor(m => m.VatG, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- total -->
    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(m => m.TotalG)
        </div>
        <div class="col-md-2 offset-md-2">
            @Html.DisplayFor(m => m.TotalG)
            @Html.ValidationMessageFor(m => m.TotalG, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<!-- methodes de paiment -->
<!-- montant -->
<div>
    <table class="table table-condensed" id="tablePayment">
        <tr>
            <th>Methode</th>
            <th>Montant</th>
        </tr>
        @{
            if (Model.Payments == null || Model.Payments.Count == 0)
            {
                <tr>
                    <td>-</td>
                    <td>-</td>
                </tr>
            }
            else
            {
                foreach (var item in Model.Payments)
                {
                    <tr>
                        <td id="nameItem">@item.paymentMethodId</td>
                        <td id="price">@item.amount<span class="glyphicon glyphicon-euro"></span></td>
                    </tr>
                }
            }
        }
    </table>
</div>
<!-- message -->
<div>
    <p id="messageT">
        @Html.DisplayFor(m => m.Message)
    </p>
    @Html.ValidationMessageFor(m => m.Message, "", new { @class = "text-danger" })
</div>
