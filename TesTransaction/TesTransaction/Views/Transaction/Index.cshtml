@using TesTransaction.Models
@model TrIndexViewModel

@{
    ViewBag.Title = "Index";
}

@section Styles {
    <link href="@Url.Content("~/Content/test2.css")" rel="stylesheet" type="text/css" />
}


<div id="page">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <header id="header1">
        <div style="visibility: hidden">
            @Html.LabelFor(m => m.TerminalId)
            @Html.TextBoxFor(m => m.TerminalId, new { size = "1", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.TerminalId, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(m => m.DateDay)
            @Html.TextBoxFor(m => m.DateDay, new { size = "6", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.DateDay, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(m => m.HourDay)
            @Html.TextBoxFor(m => m.HourDay, new { size = "6", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.HourDay, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(m => m.Vendor)
            @Html.TextBoxFor(m => m.Vendor, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Vendor, "", new { @class = "text-danger" })
        </div>
        <div style="visibility: visible">
            @Html.LabelFor(m => m.NumTransaction)
            @Html.TextBoxFor(m => m.NumTransaction, new { size = "3", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.NumTransaction, "", new { @class = "text-danger" })
        </div>
    </header>
    <section id="mysection">
        <div id="containerLeft">
            <div id="addP">
                <div>
                    <input id="addProduct" type="text" placeholder="Add..">
                    <button type="button" id="ButtonAddP" class="fct_btn" value="" onclick="ButtonAddProduct_Click()">Ajouter</button>
                </div>
                
                <span id="errorAddProduct" class="text-danger" style=" visibility:hidden"></span>

            </div>
            <div id="detail">
                @Html.Partial("_PartialTransactionDetail", new TrDetailsViewModel { DetailsListWithTot = Model.DetailsListWithTot })
            </div>
            <p>Vue Mère : @DateTime.Now.ToLongTimeString()</p>
            <div class="Totals">
                @Html.LabelFor(m => m.GlobalVAT)
                @Html.DropDownListFor(m => m.GlobalVAT, new SelectList(Model.VatsList, "appliedVat", "appliedVat"), "Choix de la TVA", new { @onchange = "AddVat()" })
                @Html.ValidationMessageFor(m => m.GlobalVAT, "", new { @class = "text-danger" })
                <span id="errorAddVat" class="text-danger" style=" visibility:hidden"></span>

                @Html.LabelFor(m => m.GlobalTotal)
                @Html.TextBoxFor(m => m.GlobalTotal, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.GlobalTotal, "", new { @class = "text-danger" })
                <span id="errorAddVat" class="text-danger" style=" visibility:hidden"></span>
            </div>
            <div id="calculator">
                <table>
                    <tr>
                        <td>
                            <input type="button" id="Button1" class="calc_btn" value="1" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="Button2" class="calc_btn" value="2" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="Button3" class="calc_btn" value="3" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="ButtonAdd" class="calc_btn" value="+" onclick="ButtonAddProduct_Click()">
                        </td>
                        <td>
                            <input type="button" id="ButtonCustomer" class="fct_btn" value="Customer" onclick="ButtonCustomer_Click()">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input type="button" id="Button4" class="calc_btn" value="4" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="Button5" class="calc_btn" value="5" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="Button6" class="calc_btn" value="6" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="ButtonMinus" class="calc_btn" value="-" onclick="ButtonRemoveProduct_Click()">
                        </td>
                        <td>
                            <input type="button" id="ButtonPayment" class="fct_btn" value="Payment" onclick="ButtonPayment_Click()">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input type="button" id="Button7" class="calc_btn" value="7" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="Button8" class="calc_btn" value="8" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="Button9" class="calc_btn" value="9" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="ButtonMultiply" class="calc_btn" value="?" onclick="">
                        </td>
                        <td>
                            <input type="button" id="ButtonSuspend" class="fct_btn" value="Suspend" onclick="ButtonSuspend_Click">
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input type="button" id="ButtonPlusMinus" class="calc_btn" value="&plusmn; ?" onclick="ButtonPlusMinus_Click">
                        </td>
                        <td>
                            <input type="button" id="Button0" class="calc_btn" value="0" onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="ButtonComa" class="calc_btn" value="," onclick="ButtonCalc_Click(this)">
                        </td>
                        <td>
                            <input type="button" id="ButtonReturn" class="calc_btn" value="&larr;" onclick="ButtonDelete_Click()">
                        </td>
                        <td>
                            <input type="button" id="ButtonS" class="fct_btn" value="?" onclick="">
                        </td>
                    </tr>
                </table>
            </div> <!-- end calculator -->
        </div>  <!-- end containerLeft -->
        <div id="containerRight">
            <input id="searchProduct" name="searchProduct" type="text" placeholder="Search..">
            <div id="search">

            </div>
        </div>  <!-- end containerRight -->
    </section>


</div> <!-- end page-->

@section Scripts{
    <script type="text/javascript">
        function ButtonCalc_Click(id) {
            var val = id.getAttribute('Value');
            document.getElementById('addProduct').value += val;
        }

        function ButtonDelete_Click() {
            var val = document.getElementById('addProduct').value;
            document.getElementById('addProduct').value = val.substring(0, val.length - 1);
        }

        function ButtonAddProduct_Click() {
            var minus = false;
            CreateRquestAddOrRemove(minus);
        }

        function ButtonRemoveProduct_Click() {
            var minus = true;
            CreateRquestAddOrRemove(minus);
        }

        function CreateRquestAddOrRemove(minus) {
            document.getElementById('errorAddProduct').textContent = "";
            document.getElementById('errorAddProduct').style.visibility = "hidden";
            try {
                var val = document.getElementById('addProduct').value;
                if (val === null || val === "") {
                    throw "Il faut saisir un produit";
                } else {
                    var val = document.getElementById('addProduct').value;
                    var numTransaction = document.getElementById('NumTransaction').value;
                    var terminal = document.getElementById('TerminalId').value;

                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (this.readyState == 4 && this.status == 200) {
                            document.getElementById('addProduct').value = "";
                            document.getElementById('detail').innerHTML = xhr.responseText;
                        }
                    }

                    //Post Method
                    var url = "/Transaction/RefreshDetails";
                    var param = "addProduct=" + val
                        + "&numTransaction=" + numTransaction
                        + "&terminalId=" + terminal
                        + "&minus=" + minus;
                    xhr.open("POST", url);
                    xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                    xhr.send(param);
                }
            } catch (e) {
                document.getElementById('errorAddProduct').textContent = e;
                document.getElementById('errorAddProduct').style.visibility = "visible";
                console.log(e);
            }
        }

        function AddDiscount() {
            document.getElementById('errorGlobalDiscount').textContent = "";
            document.getElementById('errorGlobalDiscount').style.visibility = "hidden";
            try {
                var subT = document.getElementById('subTotal1').value;
                subT = parseFloat(subT.replace(",", "."));
                var d = (parseFloat(document.getElementById('globalDiscount').value)) / 100;
                if (d < 0 || d > 1) {
                    throw "valeur en % devant être comprise entre 0 et 100";
                } else if (Number.isNaN(d) || d == undefined || d == null || d === "") {
                    throw "valeur devant être un nombre entre 0 et 100";
                } else if (d == 0) {
                    document.getElementById('subTotal2').value = subT;
                } else {
                    var result = parseFloat(subT - (subT * d)).toFixed(2);
                    document.getElementById('subTotal2').value = result;
                }
            }
            catch (e) {
                document.getElementById('errorGlobalDiscount').textContent = e;
                document.getElementById('errorGlobalDiscount').style.visibility = "visible";
                console.log(e);
            }
        }

        function AddVat() {
            document.getElementById('errorAddVat').textContent = "";
            document.getElementById('errorAddVat').style.visibility = "hidden";
            try {
                var v = document.getElementById('GlobalVAT').value;
                var subT = document.getElementById('subTotal2').value;
                //v = "0,21"  --> parseFloat(document.getElementById('listVats').value) ne marche pas
                //le parseFloat donne 0, souci avec la ","  il faut la remplacer par "."
                subT = parseFloat(subT.replace(",", "."));
                if (v === "" || v === "0,00" || v === null) {
                    document.getElementById('GlobalTotal').value = subT;
                } else {
                    v = parseFloat(v.replace(",", "."));
                    var result = parseFloat(subT * ++v).toFixed(2);
                    document.getElementById('GlobalTotal').value = result;
                }
            } catch (e) {
                document.getElementById('errorAddVat').textContent = e;
                document.getElementById('errorAddVat').style.visibility = "visible";
                console.log(e);
            }
            
        }

        function ButtonPayment_Click() {
            var numTransaction = document.getElementById('NumTransaction').value;
            var terminal = document.getElementById('TerminalId').value;
            var vendor = document.getElementById('Vendor').value;
            var subTotitem = document.getElementById('subTotal1').value;
            var discountG = document.getElementById('globalDiscount').value;
            var subTot = document.getElementById('subTotal2').value;
            var vat = document.getElementById('GlobalVAT').value;
            var total = document.getElementById('GlobalTotal').value;

            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    document.getElementById('page').innerHTML = xhr.responseText;
                    
                }
            }

            //Post Method
            //var url = "/Transaction/PaymentTransaction";
            var url = "/Transaction/Index";
            var param = "numTransaction=" + numTransaction
                + "&terminalId=" + terminal
                + "&vendor=" + vendor
                + "&subTotitem=" + subTotitem
                + "&discountG=" + discountG
                + "&subTot=" + subTot
                + "&globalVAT=" + vat
                + "&globalTotal=" + total;
            xhr.open("POST", url);
            xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhr.send(param);
        }

        //function AddSubTot() {
        //    var subT = parseFloat(document.getElementById('subTotal2').value).toFixed(2);
        //    document.getElementById('TotalEnd').value = subT
        //    //return subT;
        //}

        //function CloneValue(c) {
        //    //var c = parseFloat(document.getElementById('subTotal1').value);
        //    document.getElementById('subTotal2').value = c;
        //}

        //function AddVoucher() {
        //    var subT = parseFloat(document.getElementById('subTotal2').value);
        //    if (subT == 0 || subT == null) {
        //        subT = parseFloat(document.getElementById('subTotal1').value);
        //    }
        //    var v = parseFloat(document.getElementById('voucher').value);
        //    var temp = 0;
        //    if (subT > v || subT < v) {
        //        temp = subT - v;
        //    }
        //    document.getElementById('subTotal2').value = temp;
        //}

        //function AddVoucher() {
        //    var v = parseFloat(document.getElementById('voucher').value);
        //    var subT = parseFloat(document.getElementById('subTotal1').value);

        //    var xhr = new XMLHttpRequest();
        //    xhr.onreadystatechange = function () {
        //        if (this.readyState == 4 && this.status == 200) {

        //            document.getElementById('subTotal2').innerHTML = xhr.responseText;
        //        }
        //    }

        //    //Post Method
        //    var url = "/Transaction/AddVoucher";
        //    var param = "voucher=" + v
        //        + "&subTotal=" + subT;

        //    xhr.open("POST", url);
        //    xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        //    xhr.send(param);
        //}


        //function AddAllItemSubTot() {
        //    var tot;
        //    var p = parseFloat(document.getElementById('itemSubTot').value).toFixed(2);
        //    if (p == null || p == 0 || p == "-") {
        //        tot = 0;
        //    } else {
        //        tot += p;
        //        document.getElementById('subTotal1').value = tot;
        //    }
        //}

        //function getItemSubTot() {
        //    var p = parseFloat(document.getElementById('price').value).toFixed(2);
        //    var q = parseFloat(document.getElementById('quantity').value).toFixed(2);
        //    var d = parseFloat(document.getElementById('Discount').value).toFixed(2);
        //    alert("p= " + p + "\nq= " + q + "\nd= " + d);
        //    if (p == null || p == 0 || q == null || q == 0) {
        //        document.getElementById('itemSubTot').value = 0;
        //    } else if (d == 0 || d == null) {
        //        document.getElementById('itemSubTot').value = (p * q);
        //    } else {
        //        //ex: (100*2)*0.05 = 10
        //        var temp = (p * q) * d;
        //        document.getElementById('itemSubTot').value = (p * q) - temp;
        //    }
        //}

    </script>
}